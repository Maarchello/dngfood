import React, {useEffect, useState} from 'react';
import {useParams} from "react-router-dom";
import {getOrderById} from "../../service/ApiService";
import {Box, Chip, Divider, List, ListItem, ListItemText, Typography} from "@mui/material";

const renderStatus = (status) => {
    const map = {
        NEW: 'üü° –ù–æ–≤—ã–π',
        REJECTED: '‚ùå –û—Ç–∫–ª–æ–Ω—ë–Ω',
        ON_KITCHEN: 'üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–∏—Ç—Å—è',
        ON_DELIVERY: 'üõµ –í –ø—É—Ç–∏',
        COMPLETED: '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω',
        CANCELLED_BY_USER: 'üö´ –û—Ç–º–µ–Ω—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º',
    };

    return map[status] || status;
};

const renderStatusChip = (status) => {
    const config = {
        NEW: { label: 'üü° –ù–æ–≤—ã–π', color: 'warning' },
        REJECTED: { label: '‚ùå –û—Ç–∫–ª–æ–Ω—ë–Ω', color: 'error' },
        ON_KITCHEN: { label: 'üë®‚Äçüç≥ –ì–æ—Ç–æ–≤–∏—Ç—Å—è', color: 'info' },
        ON_DELIVERY: { label: 'üõµ –í –ø—É—Ç–∏', color: 'primary' },
        COMPLETED: { label: '‚úÖ –î–æ—Å—Ç–∞–≤–ª–µ–Ω', color: 'success' },
        CANCELLED_BY_USER: { label: 'üö´ –û—Ç–º–µ–Ω—ë–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º', color: 'default' },
    };

    const c = config[status] || { label: status, color: 'default' };
    return <Chip label={c.label} color={c.color} />;
};
const OrderDetails = () => {

    const {orderId} = useParams();
    const [order, setOrder] = useState();

    useEffect(() => {
        getOrderById(orderId, (order) => {
            setOrder(order)
        })
    }, [orderId])

    if (!order) return <Typography>–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;

    return (
        <Box p={2}>
            <Typography variant="h5" gutterBottom>–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</Typography>

            <Typography variant="subtitle1"><b>–†–µ—Å—Ç–æ—Ä–∞–Ω:</b> {order.restaurantName}</Typography>
            <Typography variant="subtitle1"><b>–ê–¥—Ä–µ—Å:</b> {order.deliveryAddress}</Typography>
            <Typography variant="subtitle1"><b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> {order.clientContactPhone}</Typography>
            <Typography variant="subtitle1"><b>–û–ø–ª–∞—Ç–∞:</b> {order.paymentMethod === 'QR' ? 'QR' : '–ù–∞–ª–∏—á–Ω—ã–µ'}</Typography>
            <Typography variant="subtitle1"><b>–°—Ç–æ–∏–º–æ—Å—Ç—å:</b> {order.price} VND</Typography>
            <Typography variant="subtitle1">
                <b>–°—Ç–∞—Ç—É—Å:</b> {renderStatusChip(order.status)}
            </Typography>
            <Divider sx={{ my: 2 }} />

            <Typography variant="h6">–ó–∞–∫–∞–∑:</Typography>
            <List>
                {order.positions.map((position) => (
                    <ListItem key={position.name}>
                        <ListItemText primary={`${position.name} √ó ${position.quantity}`} />
                    </ListItem>
                ))}
            </List>
        </Box>
    );
};

export default OrderDetails;